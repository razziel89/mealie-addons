name: "ci"

on:
  push:
  pull_request:
    branches: main

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  ci:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install Golang
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Install dependencies
      run: |
        # System.
        sudo apt-get install make curl wget
        # Go.
        curl -sSfL "${RAW_URL}/${LINT}" | sudo sh -s -- -b "${TARGET}" v1.63.4
        # Custom.
        sudo wget -O "${TARGET}/mdslw" "${MDSLW_URL}/${MDSLW_BIN}"
        sudo chmod +x "${TARGET}/mdslw"
      env:
        RAW_URL: https://raw.githubusercontent.com
        LINT: golangci/golangci-lint/master/install.sh
        MDSLW_URL: https://github.com/razziel89/mdslw/releases/latest/download/
        MDSLW_BIN: mdslw_x86_64-unknown-linux-musl
        TARGET: /usr/local/bin

    - name: Set up project
      run: make setup

    - name: Build binary
      run: make build

    - name: Lint project
      run: make lint

    - name: Build all release binaries on main
      uses: goreleaser/goreleaser-action@v4
      if: ${{ github.ref == 'refs/heads/main' }}
      with:
        args: build --clean --snapshot
      env:
        CLIVERSION: ci-cd

    - name: Set CLIVERSION env var on tag
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        echo >> $GITHUB_ENV "CLIVERSION=$(
          git describe --exact-match --tags | sed 's/^v//'
        )"

    - name: Release binaries on tag
      uses: goreleaser/goreleaser-action@v4
      if: startsWith(github.ref, 'refs/tags/')
      with:
        args: release --clean
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
